{"ast":null,"code":"import React from 'react';\nimport * as api from '../api/index';\nexport const askQuestion = (questionData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.postQuestion(questionData);\n    dispatch({\n      type: \"POST_QUESTION\",\n      payload: data\n    });\n    // dispatch(fetchAllQuestions())\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const fetchAllQuestions = () => async (disptach) => {\n//     try {\n//         const { data } = await api.getAllQuestions()\n//         disptach({ type: 'FETCH_ALL_QUESTIONS', payload: data})\n//     } catch (error) {\n//         console.log(error)\n//     }\n// }\n\n// export const deleteQuestion = (id, navigate) => async (dispatch) => {\n//     try {\n//         await api.deleteQuestion(id)\n//         dispatch(fetchAllQuestions())\n//         navigate('/')\n//     } catch (error) {\n//         console.log(error)\n//     }\n// }\n\n// export const voteQuestion = (id, value) => async (dispatch) => {\n//     try {\n//         await api.voteQuestion(id, value)\n//         dispatch(fetchAllQuestions())\n//     } catch (error) {\n//         console.log(error)\n//     }\n// }\n\n// export const postAnswer = (answerData) => async (dispatch) => {\n//     try {\n//         const { id, noOfAnswers, answerBody, userAnswered } = answerData;\n//         const { data } = await api.postAnswer( id, noOfAnswers, answerBody, userAnswered )\n//         dispatch({ type: 'POST_ANSWER', payload: data})\n//         dispatch(fetchAllQuestions())\n//     } catch (error) {\n//         console.log(error)\n//     }\n// }\n\n// export const deleteAnswer = (id, answerId, noOfAnswers) => async (dispatch) => {\n//     try {\n//         await api.deleteAnswer(id, answerId, noOfAnswers)\n//         dispatch(fetchAllQuestions())\n//     } catch (error) {\n//         console.log(error)\n//     }\n// }","map":{"version":3,"names":["React","api","askQuestion","questionData","navigate","dispatch","data","postQuestion","type","payload","error","console","log"],"sources":["F:/stackoverflow-clone-2/client/src/actions/question.js"],"sourcesContent":["import React from 'react'\r\nimport * as api from '../api/index'\r\n\r\nexport const askQuestion = (questionData, navigate) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.postQuestion(questionData)\r\n        dispatch({ type: \"POST_QUESTION\", payload: data})\r\n        // dispatch(fetchAllQuestions())\r\n        navigate('/')\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// export const fetchAllQuestions = () => async (disptach) => {\r\n//     try {\r\n//         const { data } = await api.getAllQuestions()\r\n//         disptach({ type: 'FETCH_ALL_QUESTIONS', payload: data})\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// }\r\n\r\n// export const deleteQuestion = (id, navigate) => async (dispatch) => {\r\n//     try {\r\n//         await api.deleteQuestion(id)\r\n//         dispatch(fetchAllQuestions())\r\n//         navigate('/')\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// }\r\n\r\n// export const voteQuestion = (id, value) => async (dispatch) => {\r\n//     try {\r\n//         await api.voteQuestion(id, value)\r\n//         dispatch(fetchAllQuestions())\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// }\r\n\r\n// export const postAnswer = (answerData) => async (dispatch) => {\r\n//     try {\r\n//         const { id, noOfAnswers, answerBody, userAnswered } = answerData;\r\n//         const { data } = await api.postAnswer( id, noOfAnswers, answerBody, userAnswered )\r\n//         dispatch({ type: 'POST_ANSWER', payload: data})\r\n//         dispatch(fetchAllQuestions())\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// }\r\n\r\n// export const deleteAnswer = (id, answerId, noOfAnswers) => async (dispatch) => {\r\n//     try {\r\n//         await api.deleteAnswer(id, answerId, noOfAnswers)\r\n//         dispatch(fetchAllQuestions())\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// } "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,cAAc;AAEnC,OAAO,MAAMC,WAAW,GAAG,CAACC,YAAY,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACvE,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,YAAY,CAACJ,YAAY,CAAC;IACrDE,QAAQ,CAAC;MAAEG,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;IACjD;IACAF,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}