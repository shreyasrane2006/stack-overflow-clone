{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'https://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('Profile')) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`;\n  }\n  return req;\n});\nexport const logIn = authData => API.post('/user/login', authData);\nexport const signUp = authData => API.post('/user/signup', authData);\n\n// export const postQuestion = (questionData) => API.post('/questions/Ask', questionData)\n// export const getAllQuestions = () => API.get('/questions/get');\n// export const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`) \n// export const voteQuestion = (id, value ) => API.patch(`/questions/vote/${id}`, { value })\n\n// export const postAnswer = (id, noOfAnswers, answerBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\n// export const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers})\n\n// export const getAllUsers = () => API.get('/user/getAllUsers');\n// export const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData)","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","logIn","authData","post","signUp"],"sources":["F:/stackoverflow-clone-2/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API = axios.create({ baseURL: 'https://localhost:5000'})\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem('Profile')){\r\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`\r\n    }\r\n    return req;\r\n})\r\n\r\nexport const logIn = (authData) => API.post('/user/login', authData);\r\nexport const signUp = (authData) => API.post('/user/signup', authData);\r\n\r\n// export const postQuestion = (questionData) => API.post('/questions/Ask', questionData)\r\n// export const getAllQuestions = () => API.get('/questions/get');\r\n// export const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`) \r\n// export const voteQuestion = (id, value ) => API.patch(`/questions/vote/${id}`, { value })\r\n\r\n// export const postAnswer = (id, noOfAnswers, answerBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\r\n// export const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers})\r\n\r\n// export const getAllUsers = () => API.get('/user/getAllUsers');\r\n// export const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData)"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;AAE9DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAClC,IAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;IAC/BF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC7F;EACA,OAAOP,GAAG;AACd,CAAC,CAAC;AAEF,OAAO,MAAMQ,KAAK,GAAIC,QAAQ,IAAKf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAME,MAAM,GAAIF,QAAQ,IAAKf,GAAG,CAACgB,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;;AAEtE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}