{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// API.interceptors.request.use((req) => {\n//     if(localStorage.getItem('Profile')){\n//         req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`\n//     }\n//     return req;\n// })\n\nexport const logIn = authData => API.post('/user/login', authData);\nexport const signUp = authData => API.post('/user/signup', authData);\nexport const postQuestion = questionData => API.post('/questions/Ask', questionData);\nexport const getAllQuestions = () => API.get('/questions/get');\n// export const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`) \n// export const voteQuestion = (id, value ) => API.patch(`/questions/vote/${id}`, { value })\n\n// export const postAnswer = (id, noOfAnswers, answerBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\n// export const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers})\n\n// export const getAllUsers = () => API.get('/user/getAllUsers');\n// export const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData)","map":{"version":3,"names":["axios","API","create","baseURL","logIn","authData","post","signUp","postQuestion","questionData","getAllQuestions","get"],"sources":["F:/stackoverflow-clone-2/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000' })\r\n\r\n// API.interceptors.request.use((req) => {\r\n//     if(localStorage.getItem('Profile')){\r\n//         req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`\r\n//     }\r\n//     return req;\r\n// })\r\n\r\nexport const logIn = (authData) => API.post('/user/login', authData);\r\nexport const signUp = (authData) => API.post('/user/signup', authData);\r\n\r\nexport const postQuestion = (questionData) => API.post('/questions/Ask', questionData)\r\nexport const getAllQuestions = () => API.get('/questions/get');\r\n// export const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`) \r\n// export const voteQuestion = (id, value ) => API.patch(`/questions/vote/${id}`, { value })\r\n\r\n// export const postAnswer = (id, noOfAnswers, answerBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\r\n// export const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers})\r\n\r\n// export const getAllUsers = () => API.get('/user/getAllUsers');\r\n// export const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData)"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;;AAE9D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAIC,QAAQ,IAAKJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAME,MAAM,GAAIF,QAAQ,IAAKJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;AAEtE,OAAO,MAAMG,YAAY,GAAIC,YAAY,IAAKR,GAAG,CAACK,IAAI,CAAC,gBAAgB,EAAEG,YAAY,CAAC;AACtF,OAAO,MAAMC,eAAe,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,gBAAgB,CAAC;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}